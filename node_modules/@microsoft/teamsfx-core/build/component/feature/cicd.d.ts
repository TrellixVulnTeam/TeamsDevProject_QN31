import { Action, ContextV3, Effect, FunctionAction, FxError, InputsWithProjectPath, MaybePromise, QTreeNode, Result } from "@microsoft/teamsfx-api";
import "reflect-metadata";
export declare class CICD {
    name: string;
    add(context: ContextV3, inputs: InputsWithProjectPath): MaybePromise<Result<Action | undefined, FxError>>;
}
export declare class AddCICDAction implements FunctionAction {
    name: string;
    type: "function";
    question(context: ContextV3, inputs: InputsWithProjectPath): Promise<Result<QTreeNode | undefined, FxError>>;
    plan(context: ContextV3, inputs: InputsWithProjectPath): Result<Effect[], FxError>;
    execute(context: ContextV3, inputs: InputsWithProjectPath): Promise<Result<Effect[], FxError>>;
}
export declare function addCicdQuestion(ctx: ContextV3, inputs: InputsWithProjectPath): Promise<Result<QTreeNode | undefined, FxError>>;
//# sourceMappingURL=cicd.d.ts.map