"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddApiConnectorAction = exports.ApiConnector = void 0;
const tslib_1 = require("tslib");
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
require("reflect-metadata");
const typedi_1 = require("typedi");
require("../connection/azureWebAppConfig");
require("../resource/azureSql");
const plugin_1 = require("../../plugins/resource/apiconnector/plugin");
let ApiConnector = class ApiConnector {
    constructor() {
        this.name = "api-connector";
    }
    add(context, inputs) {
        return teamsfx_api_1.ok(new AddApiConnectorAction());
    }
};
ApiConnector = tslib_1.__decorate([
    typedi_1.Service("api-connector")
], ApiConnector);
exports.ApiConnector = ApiConnector;
class AddApiConnectorAction {
    constructor() {
        this.name = "api-connector.add";
        this.type = "function";
        this.apiConnectorImpl = new plugin_1.ApiConnectorImpl();
    }
    async question(context, inputs) {
        return await this.apiConnectorImpl.generateQuestion(context, inputs);
    }
    async execute(context, inputs) {
        await this.apiConnectorImpl.scaffold(context, inputs);
        return teamsfx_api_1.ok([]);
    }
}
exports.AddApiConnectorAction = AddApiConnectorAction;
//# sourceMappingURL=apiConnector.js.map