import { Action, ContextV3, FxError, InputsWithProjectPath, MaybePromise, Result } from "@microsoft/teamsfx-api";
import "reflect-metadata";
import "./bicep";
import "./debug";
import "./envManager";
import "./resource/appManifest/appManifest";
import "./resource/azureSql";
import "./resource/aad";
import "./resource/azureAppService/azureFunction";
import "./resource/azureStorage";
import "./resource/azureAppService/azureWebApp";
import "./resource/botService";
import "./resource/spfx";
import "./feature/bot";
import "./feature/sql";
import "./feature/tab";
import "./feature/cicd";
import "./feature/apiConnector";
import "./code/botCode";
import "./code/tabCode";
import "./code/apiCode";
import "./connection/aadConfig";
import "./connection/azureWebAppConfig";
import "./connection/azureFunctionConfig";
export declare class TeamsfxCore {
    name: string;
    init(context: ContextV3, inputs: InputsWithProjectPath): MaybePromise<Result<Action | undefined, FxError>>;
    provision(context: ContextV3, inputs: InputsWithProjectPath): Promise<Result<Action | undefined, FxError>>;
    build(context: ContextV3, inputs: InputsWithProjectPath): Result<Action | undefined, FxError>;
    deploy(context: ContextV3, inputs: InputsWithProjectPath): MaybePromise<Result<Action | undefined, FxError>>;
}
//# sourceMappingURL=core.d.ts.map