"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FxPreDeployAction = void 0;
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const localizeUtils_1 = require("../../common/localizeUtils");
const provision_1 = require("../../plugins/solution/fx-solution/v3/provision");
class FxPreDeployAction {
    constructor() {
        this.type = "function";
        this.name = "fx.preDeploy";
    }
    async execute(context, inputs) {
        const ctx = context;
        const components = inputs["deploy-plugin"];
        if (components === undefined || components.length === 0) {
            return teamsfx_api_1.err(new teamsfx_api_1.UserError("fx", "NoResourcePluginSelected", localizeUtils_1.getDefaultString("core.NoPluginSelected"), localizeUtils_1.getLocalizedString("core.NoPluginSelected")));
        }
        const subscriptionResult = await provision_1.checkAzureSubscription(ctx, ctx.envInfo, ctx.tokenProvider.azureAccountProvider);
        if (subscriptionResult.isErr()) {
            return teamsfx_api_1.err(subscriptionResult.error);
        }
        const consent = await provision_1.askForDeployConsent(ctx, ctx.tokenProvider.azureAccountProvider, ctx.envInfo);
        if (consent.isErr()) {
            return teamsfx_api_1.err(consent.error);
        }
        return teamsfx_api_1.ok([]);
    }
}
exports.FxPreDeployAction = FxPreDeployAction;
//# sourceMappingURL=preDeployAction.js.map