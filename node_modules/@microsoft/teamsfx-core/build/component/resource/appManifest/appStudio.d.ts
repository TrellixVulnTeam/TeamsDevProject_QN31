import { FxError, InputsWithProjectPath, M365TokenProvider, Result, TeamsAppManifest, TokenProvider, v2, v3 } from "@microsoft/teamsfx-api";
/**
 * not support the scenario: user provide app package
 */
export declare function createOrUpdateTeamsApp(ctx: v2.Context, inputs: InputsWithProjectPath, envInfo: v3.EnvInfoV3, tokenProvider: TokenProvider): Promise<Result<string, FxError>>;
/**
 * not support the scenario: user provide app package
 */
export declare function createOrUpdateTeamsAppByZip(zipFilePath: string, ctx: v2.Context, tokenProvider: TokenProvider): Promise<Result<string, FxError>>;
export declare function publishTeamsApp(ctx: v2.Context, inputs: InputsWithProjectPath, envInfo: v3.EnvInfoV3, tokenProvider: M365TokenProvider): Promise<Result<{
    appName: string;
    publishedAppId: string;
    update: boolean;
}, FxError>>;
/**
 * Build appPackage.{envName}.zip
 * @returns Path for built Teams app package
 */
export declare function buildTeamsAppPackage(projectPath: string, envInfo: v3.EnvInfoV3, withEmptyCapabilities?: boolean): Promise<Result<string, FxError>>;
/**
 * Validate manifest
 * @returns an array of validation error strings
 */
export declare function validateManifest(manifest: TeamsAppManifest): Promise<Result<string[], FxError>>;
//# sourceMappingURL=appStudio.d.ts.map