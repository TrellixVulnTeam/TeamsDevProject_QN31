"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.AzureFunctionsConfig = void 0;
const tslib_1 = require("tslib");
require("reflect-metadata");
const typedi_1 = require("typedi");
const workflow_1 = require("../workflow");
const azureResourceConfig_1 = require("./azureResourceConfig");
let AzureFunctionsConfig = class AzureFunctionsConfig extends azureResourceConfig_1.AzureResourceConfig {
    constructor() {
        super(...arguments);
        this.name = "azure-function-config";
        this.bicepModuleName = "azureFunction";
        this.requisite = "azure-function";
        this.references = ["azure-function", "azure-sql", "key-vault", "identity"];
    }
    generateBicep(context, inputs) {
        try {
            const tabConfig = workflow_1.getComponent(context.projectSetting, "teams-tab");
            if (tabConfig === null || tabConfig === void 0 ? void 0 : tabConfig.hosting) {
                const tabHosting = typedi_1.Container.get(tabConfig.hosting);
                this.templateContext.tabDomainVarName = tabHosting.outputs.endpoint.bicepVariable;
            }
        }
        catch (_a) { }
        return super.generateBicep(context, inputs);
    }
};
AzureFunctionsConfig = tslib_1.__decorate([
    typedi_1.Service("azure-function-config")
], AzureFunctionsConfig);
exports.AzureFunctionsConfig = AzureFunctionsConfig;
//# sourceMappingURL=azureFunctionConfig.js.map